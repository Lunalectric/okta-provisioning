name: Okta Provisioning
on:
  push:
  workflow_dispatch:

env:
    TF_VAR_api_token: ${{ secrets.OKTA_API_TOKEN }}
    TF_VAR_base_url: ${{ secrets.OKTA_BASE_URL }}
    TF_VAR_org_name: ${{ secrets.OKTA_ORG_NAME }}
    MONDOO_CONFIG_BASE64: ${{ secrets.MONDOO_CONFIG_BASE64 }}

jobs:
  terraform-pre-plan-validation:
    name: "Validate Terraform HCL (pre-plan)"
    runs-on: ubuntu-latest
    defaults:
      run:
          working-directory: ./terraform
    steps:
    - uses: 'actions/checkout@v3'

    - id: 'google-cloud-auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Terraform Init
      id: init
      run: terraform init -reconfigure

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check  

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

  cnspec-scan-terraform-hcl:
    name: "Scan Terraform HCL (pre-plan)"
    runs-on: ubuntu-latest
    container: mondoo/cnspec:8
    needs: terraform-pre-plan-validation 

    steps:
      - uses: 'actions/checkout@v3'
      - name: Scan Terraform HCL (pre-plan)
        run: |
          cnspec scan terraform ./terraform
        env:
          MONDOO_DETECT_CICD: false

  terraform-plan:
    runs-on: ubuntu-latest
    container: hashicorp/terraform:1.4

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Mitigate that fancy action/cache@v3 does not work with busybox tar on alpine
        run: apk add --no-cache tar

      - name: Use cache to share files between jobs
        uses: actions/cache@v3
        id: terraform-plan
        with:
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/terraform/**') }}
          path: terraform/plan.json          

      - name: Terraform init
        run: terraform -chdir="./terraform" init

      - name: Terraform plan
        run: terraform -chdir="./terraform" plan -out=plan.out

      - name: Terraform show
        run: terraform -chdir="./terraform" show -json plan.out > terraform/plan.json

  cnspec-scan-plan:
    needs: terraform-plan
    runs-on: ubuntu-latest
    container: mondoo/cnspec:latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Use cache to share files between jobs
        uses: actions/cache@v3
        id: terraform-plan
        with:
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/terraform/**') }}
          path: terraform/plan.json
        
      - name: Scan Terraform Plan
        run: cnspec scan terraform plan terraform/plan.json
